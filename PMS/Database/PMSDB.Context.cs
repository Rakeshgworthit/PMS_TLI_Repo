//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMS.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PMSEntities : DbContext
    {
        public PMSEntities()
            : base("name=PMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<additions_omissions> additions_omissions { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<bank> banks { get; set; }
        public virtual DbSet<branch> branches { get; set; }
        public virtual DbSet<company> companies { get; set; }
        public virtual DbSet<country> countries { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<designer_receipt_detail> designer_receipt_detail { get; set; }
        public virtual DbSet<expense> expenses { get; set; }
        public virtual DbSet<ExpenseCategory> ExpenseCategories { get; set; }
        public virtual DbSet<loan> loans { get; set; }
        public virtual DbSet<loansDetail> loansDetails { get; set; }
        public virtual DbSet<mode_of_payment> mode_of_payment { get; set; }
        public virtual DbSet<payment_detail> payment_detail { get; set; }
        public virtual DbSet<payment> payments { get; set; }
        public virtual DbSet<project_status> project_status { get; set; }
        public virtual DbSet<project> projects { get; set; }
        public virtual DbSet<receipt_detail> receipt_detail { get; set; }
        public virtual DbSet<receipt> receipts { get; set; }
        public virtual DbSet<status> status { get; set; }
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<tbl_contract_types> tbl_contract_types { get; set; }
        public virtual DbSet<tbl_designerinvoice_items> tbl_designerinvoice_items { get; set; }
        public virtual DbSet<tbl_invoice> tbl_invoice { get; set; }
        public virtual DbSet<tbl_payment_terms> tbl_payment_terms { get; set; }
        public virtual DbSet<tbl_supplier_invoice> tbl_supplier_invoice { get; set; }
        public virtual DbSet<tbl_supplierinvoice_items> tbl_supplierinvoice_items { get; set; }
        public virtual DbSet<user_access_rights> user_access_rights { get; set; }
        public virtual DbSet<user_detail> user_detail { get; set; }
        public virtual DbSet<tbl_invoice_items> tbl_invoice_items { get; set; }
        public virtual DbSet<tbl_designer_invoice> tbl_designer_invoice { get; set; }
        public virtual DbSet<designer_receipts> designer_receipts { get; set; }
        public virtual DbSet<salesman> salesmen { get; set; }
    
        public virtual int SSP_Add_DesignerInvoice_Items(Nullable<int> invoice_id, string item_description, Nullable<decimal> item_amount, string contract_number)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            var item_descriptionParameter = item_description != null ?
                new ObjectParameter("item_description", item_description) :
                new ObjectParameter("item_description", typeof(string));
    
            var item_amountParameter = item_amount.HasValue ?
                new ObjectParameter("item_amount", item_amount) :
                new ObjectParameter("item_amount", typeof(decimal));
    
            var contract_numberParameter = contract_number != null ?
                new ObjectParameter("contract_number", contract_number) :
                new ObjectParameter("contract_number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Add_DesignerInvoice_Items", invoice_idParameter, item_descriptionParameter, item_amountParameter, contract_numberParameter);
        }
    
        public virtual int SSP_Add_DesignerReceipt_Detail(Nullable<int> receipt_id, Nullable<decimal> amount, Nullable<decimal> gst_percentage, Nullable<decimal> gst_amount, Nullable<decimal> total_amount, Nullable<int> invoice_id)
        {
            var receipt_idParameter = receipt_id.HasValue ?
                new ObjectParameter("receipt_id", receipt_id) :
                new ObjectParameter("receipt_id", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var gst_percentageParameter = gst_percentage.HasValue ?
                new ObjectParameter("gst_percentage", gst_percentage) :
                new ObjectParameter("gst_percentage", typeof(decimal));
    
            var gst_amountParameter = gst_amount.HasValue ?
                new ObjectParameter("gst_amount", gst_amount) :
                new ObjectParameter("gst_amount", typeof(decimal));
    
            var total_amountParameter = total_amount.HasValue ?
                new ObjectParameter("total_amount", total_amount) :
                new ObjectParameter("total_amount", typeof(decimal));
    
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Add_DesignerReceipt_Detail", receipt_idParameter, amountParameter, gst_percentageParameter, gst_amountParameter, total_amountParameter, invoice_idParameter);
        }
    
        public virtual int SSP_Add_Invoice_Items(Nullable<int> invoice_id, string item_description, Nullable<decimal> item_amount, string contract_number, Nullable<int> project_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            var item_descriptionParameter = item_description != null ?
                new ObjectParameter("item_description", item_description) :
                new ObjectParameter("item_description", typeof(string));
    
            var item_amountParameter = item_amount.HasValue ?
                new ObjectParameter("item_amount", item_amount) :
                new ObjectParameter("item_amount", typeof(decimal));
    
            var contract_numberParameter = contract_number != null ?
                new ObjectParameter("contract_number", contract_number) :
                new ObjectParameter("contract_number", typeof(string));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Add_Invoice_Items", invoice_idParameter, item_descriptionParameter, item_amountParameter, contract_numberParameter, project_idParameter);
        }
    
        public virtual int SSP_Add_Payment_Detail(Nullable<int> payment_id, Nullable<int> supplierinvoice_item_id, Nullable<decimal> payment_amount, Nullable<decimal> agreed_amount)
        {
            var payment_idParameter = payment_id.HasValue ?
                new ObjectParameter("payment_id", payment_id) :
                new ObjectParameter("payment_id", typeof(int));
    
            var supplierinvoice_item_idParameter = supplierinvoice_item_id.HasValue ?
                new ObjectParameter("supplierinvoice_item_id", supplierinvoice_item_id) :
                new ObjectParameter("supplierinvoice_item_id", typeof(int));
    
            var payment_amountParameter = payment_amount.HasValue ?
                new ObjectParameter("payment_amount", payment_amount) :
                new ObjectParameter("payment_amount", typeof(decimal));
    
            var agreed_amountParameter = agreed_amount.HasValue ?
                new ObjectParameter("agreed_amount", agreed_amount) :
                new ObjectParameter("agreed_amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Add_Payment_Detail", payment_idParameter, supplierinvoice_item_idParameter, payment_amountParameter, agreed_amountParameter);
        }
    
        public virtual int SSP_Add_Receipt_Detail(Nullable<int> receipt_id, Nullable<decimal> amount, Nullable<decimal> gst_percentage, Nullable<decimal> gst_amount, Nullable<decimal> total_amount, Nullable<long> project_id, Nullable<int> invoice_id)
        {
            var receipt_idParameter = receipt_id.HasValue ?
                new ObjectParameter("receipt_id", receipt_id) :
                new ObjectParameter("receipt_id", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var gst_percentageParameter = gst_percentage.HasValue ?
                new ObjectParameter("gst_percentage", gst_percentage) :
                new ObjectParameter("gst_percentage", typeof(decimal));
    
            var gst_amountParameter = gst_amount.HasValue ?
                new ObjectParameter("gst_amount", gst_amount) :
                new ObjectParameter("gst_amount", typeof(decimal));
    
            var total_amountParameter = total_amount.HasValue ?
                new ObjectParameter("total_amount", total_amount) :
                new ObjectParameter("total_amount", typeof(decimal));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Add_Receipt_Detail", receipt_idParameter, amountParameter, gst_percentageParameter, gst_amountParameter, total_amountParameter, project_idParameter, invoice_idParameter);
        }
    
        public virtual int SSP_Add_SupplierInvoice_Items(Nullable<int> invoice_id, Nullable<int> salesperson_id, Nullable<int> project_id, string invoice_number, Nullable<decimal> gst, Nullable<decimal> invoice_amt_without_gst, Nullable<decimal> invoice_amt_with_gst, Nullable<decimal> agreed_amt_without_gst, Nullable<decimal> agreed_amt)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            var salesperson_idParameter = salesperson_id.HasValue ?
                new ObjectParameter("salesperson_id", salesperson_id) :
                new ObjectParameter("salesperson_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var invoice_numberParameter = invoice_number != null ?
                new ObjectParameter("invoice_number", invoice_number) :
                new ObjectParameter("invoice_number", typeof(string));
    
            var gstParameter = gst.HasValue ?
                new ObjectParameter("gst", gst) :
                new ObjectParameter("gst", typeof(decimal));
    
            var invoice_amt_without_gstParameter = invoice_amt_without_gst.HasValue ?
                new ObjectParameter("invoice_amt_without_gst", invoice_amt_without_gst) :
                new ObjectParameter("invoice_amt_without_gst", typeof(decimal));
    
            var invoice_amt_with_gstParameter = invoice_amt_with_gst.HasValue ?
                new ObjectParameter("invoice_amt_with_gst", invoice_amt_with_gst) :
                new ObjectParameter("invoice_amt_with_gst", typeof(decimal));
    
            var agreed_amt_without_gstParameter = agreed_amt_without_gst.HasValue ?
                new ObjectParameter("agreed_amt_without_gst", agreed_amt_without_gst) :
                new ObjectParameter("agreed_amt_without_gst", typeof(decimal));
    
            var agreed_amtParameter = agreed_amt.HasValue ?
                new ObjectParameter("agreed_amt", agreed_amt) :
                new ObjectParameter("agreed_amt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Add_SupplierInvoice_Items", invoice_idParameter, salesperson_idParameter, project_idParameter, invoice_numberParameter, gstParameter, invoice_amt_without_gstParameter, invoice_amt_with_gstParameter, agreed_amt_without_gstParameter, agreed_amtParameter);
        }
    
        public virtual ObjectResult<SSP_BankChequeReport_Result> SSP_BankChequeReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> branchId, Nullable<int> bankId, Nullable<int> chqFrom, Nullable<int> chqTo)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("bankId", bankId) :
                new ObjectParameter("bankId", typeof(int));
    
            var chqFromParameter = chqFrom.HasValue ?
                new ObjectParameter("ChqFrom", chqFrom) :
                new ObjectParameter("ChqFrom", typeof(int));
    
            var chqToParameter = chqTo.HasValue ?
                new ObjectParameter("ChqTo", chqTo) :
                new ObjectParameter("ChqTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_BankChequeReport_Result>("SSP_BankChequeReport", fromDateParameter, toDateParameter, branchIdParameter, bankIdParameter, chqFromParameter, chqToParameter);
        }
    
        public virtual ObjectResult<SSP_Banks_Result> SSP_Banks(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Banks_Result>("SSP_Banks", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }
    
        public virtual ObjectResult<SSP_Branches_Result> SSP_Branches(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Branches_Result>("SSP_Branches", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }
    
        public virtual ObjectResult<SSP_Company_Result> SSP_Company(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Company_Result>("SSP_Company", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }
    
        public virtual ObjectResult<SSP_Customer_Result> SSP_Customer(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, string customerSearch)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var customerSearchParameter = customerSearch != null ?
                new ObjectParameter("CustomerSearch", customerSearch) :
                new ObjectParameter("CustomerSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Customer_Result>("SSP_Customer", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, customerSearchParameter);
        }
    
        public virtual ObjectResult<SSP_CustomerInvoiceReport_Result> SSP_CustomerInvoiceReport(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_CustomerInvoiceReport_Result>("SSP_CustomerInvoiceReport", fromDateParameter, toDateParameter);
        }
    
        public virtual int SSP_DeleteInvoiceItem(Nullable<int> invoice_Id)
        {
            var invoice_IdParameter = invoice_Id.HasValue ?
                new ObjectParameter("Invoice_Id", invoice_Id) :
                new ObjectParameter("Invoice_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_DeleteInvoiceItem", invoice_IdParameter);
        }
    
        public virtual ObjectResult<SSP_DesignerReceiptById_Result> SSP_DesignerReceiptById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_DesignerReceiptById_Result>("SSP_DesignerReceiptById", idParameter);
        }
    
        public virtual ObjectResult<SSP_DesignerReceiptDetailByReceiptId_Result> SSP_DesignerReceiptDetailByReceiptId(Nullable<long> receiptId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("ReceiptId", receiptId) :
                new ObjectParameter("ReceiptId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_DesignerReceiptDetailByReceiptId_Result>("SSP_DesignerReceiptDetailByReceiptId", receiptIdParameter);
        }
    
        public virtual ObjectResult<SSP_EXCategory_Result> SSP_EXCategory(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_EXCategory_Result>("SSP_EXCategory", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }
    
        public virtual ObjectResult<SSP_Expense_Result> SSP_Expense(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Expense_Result>("SSP_Expense", userIDParameter, branchIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, fromdateParameter, todateParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_ExpenseReport_Result> SSP_ExpenseReport(Nullable<int> year, Nullable<int> company_Id)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var company_IdParameter = company_Id.HasValue ?
                new ObjectParameter("Company_Id", company_Id) :
                new ObjectParameter("Company_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ExpenseReport_Result>("SSP_ExpenseReport", yearParameter, company_IdParameter);
        }
    
        public virtual ObjectResult<SSP_GetAllBank_Result> SSP_GetAllBank()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetAllBank_Result>("SSP_GetAllBank");
        }
    
        public virtual ObjectResult<SSP_GetCustomerInvoicesByProject_Result> SSP_GetCustomerInvoicesByProject(Nullable<int> project_id, Nullable<int> bill_to)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            var bill_toParameter = bill_to.HasValue ?
                new ObjectParameter("Bill_to", bill_to) :
                new ObjectParameter("Bill_to", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetCustomerInvoicesByProject_Result>("SSP_GetCustomerInvoicesByProject", project_idParameter, bill_toParameter);
        }
    
        public virtual ObjectResult<SSP_GetLoanProjectsDetailsByLoanId_Result> SSP_GetLoanProjectsDetailsByLoanId(Nullable<int> loan_id)
        {
            var loan_idParameter = loan_id.HasValue ?
                new ObjectParameter("loan_id", loan_id) :
                new ObjectParameter("loan_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetLoanProjectsDetailsByLoanId_Result>("SSP_GetLoanProjectsDetailsByLoanId", loan_idParameter);
        }
    
        public virtual ObjectResult<SSP_Invoices_Result> SSP_Invoices(Nullable<System.Guid> userID, Nullable<int> companyId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> billToId, Nullable<int> salesMenId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<bool> isTax, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var billToIdParameter = billToId.HasValue ?
                new ObjectParameter("BillToId", billToId) :
                new ObjectParameter("BillToId", typeof(int));
    
            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var isTaxParameter = isTax.HasValue ?
                new ObjectParameter("IsTax", isTax) :
                new ObjectParameter("IsTax", typeof(bool));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Invoices_Result>("SSP_Invoices", userIDParameter, companyIdParameter, fromDateParameter, toDateParameter, billToIdParameter, salesMenIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, isTaxParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_Loan_Result> SSP_Loan(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> SalesmanId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var SalesmanIdParameter = SalesmanId != null ?
               new ObjectParameter("SalesmanId", SalesmanId) :
               new ObjectParameter("SalesmanId", typeof(int));


            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Loan_Result>("SSP_Loan", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter,SalesmanIdParameter);
        }
    
        public virtual ObjectResult<SSP_LoanReport_Result> SSP_LoanReport(Nullable<int> employeeId, Nullable<int> employeeType, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var employeeTypeParameter = employeeType.HasValue ?
                new ObjectParameter("EmployeeType", employeeType) :
                new ObjectParameter("EmployeeType", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_LoanReport_Result>("SSP_LoanReport", employeeIdParameter, employeeTypeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SSP_PaymentById_Result> SSP_PaymentById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PaymentById_Result>("SSP_PaymentById", idParameter);
        }
    
        public virtual ObjectResult<SSP_PaymentReport_Result> SSP_PaymentReport(string userID, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> branchid, Nullable<int> bankID, Nullable<int> projectID, Nullable<int> salesmanID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("bankID", bankID) :
                new ObjectParameter("bankID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PaymentReport_Result>("SSP_PaymentReport", userIDParameter, fromdateParameter, todateParameter, branchidParameter, bankIDParameter, projectIDParameter, salesmanIDParameter);
        }
    
        public virtual ObjectResult<SSP_Payments_Result> SSP_Payments(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> salesMenId, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Payments_Result>("SSP_Payments", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, salesMenIdParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_Print_DesignerInvoices_Result> SSP_Print_DesignerInvoices(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Print_DesignerInvoices_Result>("SSP_Print_DesignerInvoices", invoiceIdParameter);
        }
    
        public virtual ObjectResult<SSP_PrintInvoices_Result> SSP_PrintInvoices(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PrintInvoices_Result>("SSP_PrintInvoices", invoiceIdParameter);
        }
    
        public virtual ObjectResult<SSP_PrintLoan_Result> SSP_PrintLoan(Nullable<int> recID)
        {
            var recIDParameter = recID.HasValue ?
                new ObjectParameter("RecID", recID) :
                new ObjectParameter("RecID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PrintLoan_Result>("SSP_PrintLoan", recIDParameter);
        }
    
        public virtual ObjectResult<SSP_ProjectCostingReport_Result> SSP_ProjectCostingReport(Nullable<long> project_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectCostingReport_Result>("SSP_ProjectCostingReport", project_idParameter);
        }
    
        public virtual ObjectResult<SSP_ProjectListingStatusByBranch_Result> SSP_ProjectListingStatusByBranch(string userID, Nullable<int> year, Nullable<int> branchid)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectListingStatusByBranch_Result>("SSP_ProjectListingStatusByBranch", userIDParameter, yearParameter, branchidParameter);
        }
    
        public virtual ObjectResult<SSP_Projects_Result> SSP_Projects(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> projectStatus, Nullable<int> salesMenId, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var projectStatusParameter = projectStatus.HasValue ?
                new ObjectParameter("projectStatus", projectStatus) :
                new ObjectParameter("projectStatus", typeof(int));
    
            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Projects_Result>("SSP_Projects", userIDParameter, branchIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, fromdateParameter, todateParameter, projectStatusParameter, salesMenIdParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_ProjectsBySalesman_Result> SSP_ProjectsBySalesman(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string userID, Nullable<int> salesmenId, Nullable<int> branchId)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var salesmenIdParameter = salesmenId.HasValue ?
                new ObjectParameter("SalesmenId", salesmenId) :
                new ObjectParameter("SalesmenId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectsBySalesman_Result>("SSP_ProjectsBySalesman", fromDateParameter, toDateParameter, userIDParameter, salesmenIdParameter, branchIdParameter);
        }
    
        public virtual ObjectResult<SSP_ProjectsBySalesmanReport_Result> SSP_ProjectsBySalesmanReport(Nullable<int> salesmen_id, Nullable<int> project_id)
        {
            var salesmen_idParameter = salesmen_id.HasValue ?
                new ObjectParameter("salesmen_id", salesmen_id) :
                new ObjectParameter("salesmen_id", typeof(int));
    
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectsBySalesmanReport_Result>("SSP_ProjectsBySalesmanReport", salesmen_idParameter, project_idParameter);
        }
    
        public virtual ObjectResult<SSP_ProjectSummeryReport_Result> SSP_ProjectSummeryReport(string userID, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> branchid, Nullable<int> salesmanID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));
    
            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ProjectSummeryReport_Result>("SSP_ProjectSummeryReport", userIDParameter, fromdateParameter, todateParameter, branchidParameter, salesmanIDParameter);
        }
    
        public virtual ObjectResult<SSP_ReceiptDetailByReceiptId_Result> SSP_ReceiptDetailByReceiptId(Nullable<long> receiptId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("ReceiptId", receiptId) :
                new ObjectParameter("ReceiptId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ReceiptDetailByReceiptId_Result>("SSP_ReceiptDetailByReceiptId", receiptIdParameter);
        }
    
        public virtual ObjectResult<SSP_Receipts_Result> SSP_Receipts(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> salesMenId, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Receipts_Result>("SSP_Receipts", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, salesMenIdParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_ReceiptsById_Result> SSP_ReceiptsById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ReceiptsById_Result>("SSP_ReceiptsById", idParameter);
        }
    
        public virtual ObjectResult<SSP_ReceiptsDetailById_Result> SSP_ReceiptsDetailById(Nullable<long> receiptId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("receiptId", receiptId) :
                new ObjectParameter("receiptId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ReceiptsDetailById_Result>("SSP_ReceiptsDetailById", receiptIdParameter);
        }
    
        public virtual int SSP_Remove_DesignerInvoice_Items(Nullable<int> invoice_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_DesignerInvoice_Items", invoice_idParameter);
        }
    
        public virtual int SSP_Remove_DesignerReceipt_Detail(Nullable<int> receipt_id)
        {
            var receipt_idParameter = receipt_id.HasValue ?
                new ObjectParameter("receipt_id", receipt_id) :
                new ObjectParameter("receipt_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_DesignerReceipt_Detail", receipt_idParameter);
        }
    
        public virtual int SSP_Remove_Invoice_Items(Nullable<int> invoice_id)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("invoice_id", invoice_id) :
                new ObjectParameter("invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_Invoice_Items", invoice_idParameter);
        }
    
        public virtual int SSP_Remove_LoanProjectsDetailsByLoanId(Nullable<int> loan_id)
        {
            var loan_idParameter = loan_id.HasValue ?
                new ObjectParameter("loan_id", loan_id) :
                new ObjectParameter("loan_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_LoanProjectsDetailsByLoanId", loan_idParameter);
        }
    
        public virtual int SSP_Remove_LoanLoanDetailsFromSupplierPayment(Nullable<int> loan_id)
        {
            var loan_idParameter = loan_id.HasValue ?
                new ObjectParameter("loan_id", loan_id) :
                new ObjectParameter("loan_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_LoanLoanDetailsFromSupplierPayment", loan_idParameter);
        }
    
        public virtual int SSP_Remove_Payment_Detail(Nullable<int> payment_id)
        {
            var payment_idParameter = payment_id.HasValue ?
                new ObjectParameter("payment_id", payment_id) :
                new ObjectParameter("payment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_Payment_Detail", payment_idParameter);
        }
    
        public virtual int SSP_Remove_Receipt_Detail(Nullable<int> receipt_id)
        {
            var receipt_idParameter = receipt_id.HasValue ?
                new ObjectParameter("receipt_id", receipt_id) :
                new ObjectParameter("receipt_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_Receipt_Detail", receipt_idParameter);
        }
    
        public virtual int SSP_Remove_SupplierInvoice_Items(Nullable<int> invoice_item_id)
        {
            var invoice_item_idParameter = invoice_item_id.HasValue ?
                new ObjectParameter("invoice_item_id", invoice_item_id) :
                new ObjectParameter("invoice_item_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_Remove_SupplierInvoice_Items", invoice_item_idParameter);
        }
    
        public virtual int SSP_CHECK_SUPPLIER_PAYMENT(Nullable<int> sUPPLIER_INVOICE_ID)
        {
            var sUPPLIER_INVOICE_IDParameter = sUPPLIER_INVOICE_ID.HasValue ?
                new ObjectParameter("SUPPLIER_INVOICE_ID", sUPPLIER_INVOICE_ID) :
                new ObjectParameter("SUPPLIER_INVOICE_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SSP_CHECK_SUPPLIER_PAYMENT", sUPPLIER_INVOICE_IDParameter);
        }
    
        public virtual ObjectResult<SSP_SaleIndividualReport_Result> SSP_SaleIndividualReport(string userID, Nullable<int> salesmenId, Nullable<int> year)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var salesmenIdParameter = salesmenId.HasValue ?
                new ObjectParameter("SalesmenId", salesmenId) :
                new ObjectParameter("SalesmenId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SaleIndividualReport_Result>("SSP_SaleIndividualReport", userIDParameter, salesmenIdParameter, yearParameter);
        }
    
        public virtual ObjectResult<SSP_Salesmen_Result> SSP_Salesmen(Nullable<int> branchID, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, string search_Text)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var search_TextParameter = search_Text != null ?
                new ObjectParameter("Search_Text", search_Text) :
                new ObjectParameter("Search_Text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Salesmen_Result>("SSP_Salesmen", branchIDParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, search_TextParameter);
        }
    
        public virtual ObjectResult<SSP_SaleSummeryReport_Result> SSP_SaleSummeryReport(string userID, Nullable<int> branchId, Nullable<int> year)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SaleSummeryReport_Result>("SSP_SaleSummeryReport", userIDParameter, branchIdParameter, yearParameter);
        }
    
        public virtual ObjectResult<SSP_Supplier_Result> SSP_Supplier(Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Supplier_Result>("SSP_Supplier", startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }
    
        public virtual ObjectResult<SSP_SupplierLoanDetailbyPaymentId_Result> SSP_SupplierLoanDetailbyPaymentId(Nullable<int> supplier_payment_id)
        {
            var supplier_payment_idParameter = supplier_payment_id.HasValue ?
                new ObjectParameter("supplier_payment_id", supplier_payment_id) :
                new ObjectParameter("supplier_payment_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SupplierLoanDetailbyPaymentId_Result>("SSP_SupplierLoanDetailbyPaymentId", supplier_payment_idParameter);
        }
    
        public virtual ObjectResult<SSP_SupplierReport_Result> SSP_SupplierReport(string userID, Nullable<int> year, Nullable<int> branchid, Nullable<int> salesmanID, string startWith)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(int));
    
            var salesmanIDParameter = salesmanID.HasValue ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(int));
    
            var startWithParameter = startWith != null ?
                new ObjectParameter("StartWith", startWith) :
                new ObjectParameter("StartWith", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SupplierReport_Result>("SSP_SupplierReport", userIDParameter, yearParameter, branchidParameter, salesmanIDParameter, startWithParameter);
        }
    
        public virtual ObjectResult<SSP_UserBranches_Result> SSP_UserBranches(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_UserBranches_Result>("SSP_UserBranches", userIDParameter);
        }
    
        public virtual ObjectResult<SSP_Users_Result> SSP_Users(string name, string emailID, Nullable<bool> status, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Users_Result>("SSP_Users", nameParameter, emailIDParameter, statusParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter);
        }
    
        public virtual ObjectResult<SSP_UsersRoles_Result> SSP_UsersRoles(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_UsersRoles_Result>("SSP_UsersRoles", userIDParameter);
        }
    
        public virtual ObjectResult<SSP_UsersRolesById_Result> SSP_UsersRolesById(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_UsersRolesById_Result>("SSP_UsersRolesById", userIDParameter);
        }
    
        public virtual ObjectResult<SSP_SupplierInvoices_Result> SSP_SupplierInvoices(Nullable<System.Guid> userID, Nullable<int> companyId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> supplierId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<bool> isTax, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("supplierId", supplierId) :
                new ObjectParameter("supplierId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var isTaxParameter = isTax.HasValue ?
                new ObjectParameter("IsTax", isTax) :
                new ObjectParameter("IsTax", typeof(bool));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SupplierInvoices_Result>("SSP_SupplierInvoices", userIDParameter, companyIdParameter, fromDateParameter, toDateParameter, supplierIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, isTaxParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_DesignerReceiptsDetailById_Result> SSP_DesignerReceiptsDetailById(Nullable<long> receiptId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("receiptId", receiptId) :
                new ObjectParameter("receiptId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_DesignerReceiptsDetailById_Result>("SSP_DesignerReceiptsDetailById", receiptIdParameter);
        }
    
        public virtual ObjectResult<SSP_DesignerReceipts_Result> SSP_DesignerReceipts(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_DesignerReceipts_Result>("SSP_DesignerReceipts", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_DesignerInvoices_Result> SSP_DesignerInvoices(Nullable<System.Guid> userID, Nullable<int> companyId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<bool> isTax, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("companyId", companyId) :
                new ObjectParameter("companyId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var isTaxParameter = isTax.HasValue ?
                new ObjectParameter("IsTax", isTax) :
                new ObjectParameter("IsTax", typeof(bool));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_DesignerInvoices_Result>("SSP_DesignerInvoices", userIDParameter, companyIdParameter, fromDateParameter, toDateParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, isTaxParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_InvoiceWithAndWithoutPayment_Result> SSP_InvoiceWithAndWithoutPayment(string userID, Nullable<int> branchId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> bankid, Nullable<int> projectid, Nullable<int> salemenid)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var bankidParameter = bankid.HasValue ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            var salemenidParameter = salemenid.HasValue ?
                new ObjectParameter("salemenid", salemenid) :
                new ObjectParameter("salemenid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_InvoiceWithAndWithoutPayment_Result>("SSP_InvoiceWithAndWithoutPayment", userIDParameter, branchIdParameter, fromdateParameter, todateParameter, bankidParameter, projectidParameter, salemenidParameter);
        }
    
        public virtual ObjectResult<SSP_ReceiptReport_Result> SSP_ReceiptReport(string userID, Nullable<int> branchId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> bankid, Nullable<int> projectid, Nullable<int> salemenid)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var bankidParameter = bankid.HasValue ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(int));
    
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            var salemenidParameter = salemenid.HasValue ?
                new ObjectParameter("salemenid", salemenid) :
                new ObjectParameter("salemenid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_ReceiptReport_Result>("SSP_ReceiptReport", userIDParameter, branchIdParameter, fromdateParameter, todateParameter, bankidParameter, projectidParameter, salemenidParameter);
        }
    
        public virtual ObjectResult<SSP_DesignerInvoiceReport_Result> SSP_DesignerInvoiceReport(string userID, Nullable<int> branchId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> bankid, string designername)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var bankidParameter = bankid.HasValue ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(int));
    
            var designernameParameter = designername != null ?
                new ObjectParameter("designername", designername) :
                new ObjectParameter("designername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_DesignerInvoiceReport_Result>("SSP_DesignerInvoiceReport", userIDParameter, branchIdParameter, fromdateParameter, todateParameter, bankidParameter, designernameParameter);
        }
    
        public virtual ObjectResult<SSP_DesignerInvoiceWithAndWithoutPayment_Result> SSP_DesignerInvoiceWithAndWithoutPayment(string userID, Nullable<int> branchId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> bankid, string designername)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var bankidParameter = bankid.HasValue ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(int));
    
            var designernameParameter = designername != null ?
                new ObjectParameter("designername", designername) :
                new ObjectParameter("designername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_DesignerInvoiceWithAndWithoutPayment_Result>("SSP_DesignerInvoiceWithAndWithoutPayment", userIDParameter, branchIdParameter, fromdateParameter, todateParameter, bankidParameter, designernameParameter);
        }
    
        public virtual ObjectResult<SSP_Project_additions_Result> SSP_Project_additions(Nullable<System.Guid> userID, Nullable<int> branchId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> projectId, Nullable<int> startRowIndex, Nullable<int> pageSize, string colSort, string orderBy, Nullable<int> salesMenId, string searchText)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var startRowIndexParameter = startRowIndex.HasValue ?
                new ObjectParameter("startRowIndex", startRowIndex) :
                new ObjectParameter("startRowIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var colSortParameter = colSort != null ?
                new ObjectParameter("ColSort", colSort) :
                new ObjectParameter("ColSort", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var salesMenIdParameter = salesMenId.HasValue ?
                new ObjectParameter("salesMenId", salesMenId) :
                new ObjectParameter("salesMenId", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_Project_additions_Result>("SSP_Project_additions", userIDParameter, branchIdParameter, fromDateParameter, toDateParameter, projectIdParameter, startRowIndexParameter, pageSizeParameter, colSortParameter, orderByParameter, salesMenIdParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SSP_GetInvoiceList_Result> SSP_GetInvoiceList(Nullable<int> supplierId, Nullable<int> branchId)
        {
            var supplierIdParameter = supplierId.HasValue ?
                new ObjectParameter("SupplierId", supplierId) :
                new ObjectParameter("SupplierId", typeof(int));
    
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetInvoiceList_Result>("SSP_GetInvoiceList", supplierIdParameter, branchIdParameter);
        }
    
        public virtual ObjectResult<SSP_GetPaymentDetails_Result> SSP_GetPaymentDetails(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetPaymentDetails_Result>("SSP_GetPaymentDetails", idParameter);
        }
    
        public virtual ObjectResult<SSP_PaymentDetailsForSMS_Result> SSP_PaymentDetailsForSMS(Nullable<int> project_id)
        {
            var project_idParameter = project_id.HasValue ?
                new ObjectParameter("project_id", project_id) :
                new ObjectParameter("project_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_PaymentDetailsForSMS_Result>("SSP_PaymentDetailsForSMS", project_idParameter);
        }
    
        public virtual ObjectResult<SSP_GetSalesmenAndUser_Result> SSP_GetSalesmenAndUser(Nullable<int> branchId, string status)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("BranchId", branchId) :
                new ObjectParameter("BranchId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_GetSalesmenAndUser_Result>("SSP_GetSalesmenAndUser", branchIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<SSP_SupplierPaymentAndAssignedInvoices_Result> SSP_SupplierPaymentAndAssignedInvoices(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("projectId", projectId) :
                new ObjectParameter("projectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SSP_SupplierPaymentAndAssignedInvoices_Result>("SSP_SupplierPaymentAndAssignedInvoices", projectIdParameter);
        }
    
        //public virtual ObjectResult<Usp_Save_SalesmenRole_Result> Usp_Save_SalesmenRole(string id, Nullable<long> salesmanId, Nullable<long> branchId, string salesmanName)
        //{
        //    var idParameter = id != null ?
        //        new ObjectParameter("Id", id) :
        //        new ObjectParameter("Id", typeof(string));
    
        //    var salesmanIdParameter = salesmanId.HasValue ?
        //        new ObjectParameter("SalesmanId", salesmanId) :
        //        new ObjectParameter("SalesmanId", typeof(long));
    
        //    var branchIdParameter = branchId.HasValue ?
        //        new ObjectParameter("BranchId", branchId) :
        //        new ObjectParameter("BranchId", typeof(long));
    
        //    var salesmanNameParameter = salesmanName != null ?
        //        new ObjectParameter("SalesmanName", salesmanName) :
        //        new ObjectParameter("SalesmanName", typeof(string));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_Save_SalesmenRole_Result>("Usp_Save_SalesmenRole", idParameter, salesmanIdParameter, branchIdParameter, salesmanNameParameter);
        //}
    }
}
